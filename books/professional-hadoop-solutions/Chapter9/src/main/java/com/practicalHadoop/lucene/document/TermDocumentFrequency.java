/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.practicalHadoop.lucene.document;

@SuppressWarnings("all")
public class TermDocumentFrequency extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"TermDocumentFrequency\",\"namespace\":\"com.practicalHadoop.lucene.document\",\"fields\":[{\"name\":\"docFrequency\",\"type\":\"int\"},{\"name\":\"docPositions\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\"}]},{\"name\":\"docOffsets\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TermsOffset\",\"fields\":[{\"name\":\"startOffset\",\"type\":\"int\"},{\"name\":\"endOffset\",\"type\":\"int\"}]}}]}]}");
  public int docFrequency;
  public java.util.List<java.lang.Integer> docPositions;
  public java.util.List<com.practicalHadoop.lucene.document.TermsOffset> docOffsets;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return docFrequency;
    case 1: return docPositions;
    case 2: return docOffsets;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: docFrequency = (java.lang.Integer)value$; break;
    case 1: docPositions = (java.util.List<java.lang.Integer>)value$; break;
    case 2: docOffsets = (java.util.List<com.practicalHadoop.lucene.document.TermsOffset>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
